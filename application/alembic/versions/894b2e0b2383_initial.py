"""Initial

Revision ID: 894b2e0b2383
Revises: 
Create Date: 2023-06-24 08:01:04.892828

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = '894b2e0b2383'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('faculty')
    op.drop_table('grade')
    op.drop_table('course_semester')
    op.drop_index('ix_student_email', table_name='student')
    op.drop_table('student')
    op.drop_table('course_program_independent_work')
    op.drop_table('group')
    op.drop_table('course_program')
    op.drop_table('exam')
    op.drop_table('student_independent_work')
    op.drop_table('curriculum')
    op.drop_table('course')
    op.drop_table('semester')
    op.drop_table('independent_work')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'independent_work',
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('independent_work_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='independent_work_pkey'),
        sa.UniqueConstraint('name', name='independent_work_name_key'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'semester',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('semester_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('num', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('curriculum_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['curriculum_id'],
            ['curriculum.id'],
            name='semester_curriculum_id_fkey',
            ondelete='SET NULL',
        ),
        sa.PrimaryKeyConstraint('id', name='semester_pkey'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'course',
        sa.Column('exam_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('course_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['exam_id'], ['exam.id'], name='course_exam_id_fkey', ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('id', name='course_pkey'),
        sa.UniqueConstraint('name', name='course_name_key'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'curriculum',
        sa.Column('start_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('end_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('faculty_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('curriculum_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['faculty_id'], ['faculty.id'], name='curriculum_faculty_id_fkey', ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('id', name='curriculum_pkey'),
        sa.UniqueConstraint('name', name='curriculum_name_key'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'student_independent_work',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('is_passed', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column('independent_work_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['independent_work_id'],
            ['independent_work.id'],
            name='student_independent_work_independent_work_id_fkey',
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['student_id'],
            ['student.id'],
            name='student_independent_work_student_id_fkey',
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name='student_independent_work_pkey'),
        sa.UniqueConstraint('independent_work_id', 'student_id', name='unique_student_work'),
    )
    op.create_table(
        'exam',
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('exam_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='exam_pkey'),
        sa.UniqueConstraint('name', name='exam_name_key'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'course_program',
        sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('course_program_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ['course_id'], ['course.id'], name='course_program_course_id_fkey', ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('id', name='course_program_pkey'),
        sa.UniqueConstraint('name', name='course_program_name_key'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'group',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('group_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('curriculum_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['curriculum_id'],
            ['curriculum.id'],
            name='group_curriculum_id_fkey',
            ondelete='SET NULL',
        ),
        sa.PrimaryKeyConstraint('id', name='group_pkey'),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        'course_program_independent_work',
        sa.Column('independent_work_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('course_program_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['course_program_id'],
            ['course_program.id'],
            name='course_program_independent_work_course_program_id_fkey',
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['independent_work_id'],
            ['independent_work.id'],
            name='course_program_independent_work_independent_work_id_fkey',
            ondelete='CASCADE',
        ),
    )
    op.create_table(
        'student',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('student_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('is_learn', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['group_id'], ['group.id'], name='student_group_id_fkey', ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('id', name='student_pkey'),
        postgresql_ignore_search_path=False,
    )
    op.create_index('ix_student_email', 'student', ['email'], unique=False)
    op.create_table(
        'course_semester',
        sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('semester_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['course_id'], ['course.id'], name='course_semester_course_id_fkey', ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['semester_id'],
            ['semester.id'],
            name='course_semester_semester_id_fkey',
            ondelete='CASCADE',
        ),
    )
    op.create_table(
        'grade',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('grade', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('exam_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['exam_id'], ['exam.id'], name='grade_exam_id_fkey', ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['student_id'], ['student.id'], name='grade_student_id_fkey', ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id', name='grade_pkey'),
        sa.UniqueConstraint('student_id', 'exam_id', name='unique_student_exam'),
    )
    op.create_table(
        'faculty',
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='faculty_pkey'),
        sa.UniqueConstraint('name', name='faculty_name_key'),
    )
    # ### end Alembic commands ###
